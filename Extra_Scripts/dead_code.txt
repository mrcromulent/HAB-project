data = np.genfromtxt('telemetry_test.txt',delimiter=',',skip_header=1)


latitudes = data[:,][:,3]
longitudes = data[:,][:,4]
altitudes = data[:,][:,5]
speeds = data[:,][:,6]
headings = data[:,][:,7]



#with open('telemetry_test.csv') as csvfile:   
#    while True:   
#        for line in csvfile:
#            print(line)
#        time.sleep(1)
    
    #telem = list(csv.reader(csvfile))

#telemetry = [];

#for i in range(0,len(telem)):
#    telemetry.append(telem[i][0].split(','))


#time differences 

tdelta = datetime.strptime('11:15:49', FMT) - datetime.strptime(start_time, FMT)

# one line is about 78 characters



#WIND FIRST ATTEMPT

    FMT = '%H:%M:%S' #datetime format      
    ear_rad = 6000000 #m
    
    #find the time differences between the top and bottom of the band
    
    del_t = datetime.strptime(wind_upper_data[0], FMT) - datetime.strptime(wind_lower_data[0], FMT)
    dt = del_t.total_seconds()
    
    #Convert latitutde and longitude data to radians
    
    del_lat = (wind_upper_data[1] - wind_lower_data[1]) * math.pi / 180
    del_long = (wind_upper_data[2] - wind_lower_data[2]) * math.pi / 180

    lat_lower = wind_lower_data[1] * math.pi / 180
    lat_upper = wind_upper_data[1] * math.pi / 180
    
    #find the radius from the centre of the earth
    
    R = wind_upper_data[3] + ear_rad
    
    term_1 = (math.sin(del_lat)) ** 2
    term_2 = math.cos(lat_lower) * math.cos(lat_upper)
    term_3 = (math.sin(del_long)) ** 2
    
    dist = 2*R*math.sqrt(term_1 + term_2 * term_3)

    return [wind_lower_data[3],wind_upper_data[3],dist/dt]


BINARY THING

#convert last line into string
        
        ll = str(f.readline())
        last_line = ll[2:-6].split(',')  












x = np.linspace(0,130,predictions_made)
plt.xticks(x,times_list,rotation = 'vertical')
plt.plot(x,how_far_list)
plt.show()

            how_far_list.append(landing.how_far(prediction,time)[1])
            times_list.append(landing.how_far(prediction,time)[0])

how_far_list = []
times_list = []

import matplotlib.pyplot as plt
import numpy as np

 #   time = new_telemetry[2]
 #   lat = new_telemetry[3]
 #   long = new_telemetry[4]
 #   speed = new_telemetry[6]
 #   heading = new_telemetry[7]



def temp_press_at_alt(alt):
    #from https://www.grc.nasa.gov/www/k-12/rocket/atmosmet.html
    
    if 0 <= alt < 11000:
        P_b = 101325 #Pa
        T_b = 288.15 #K
        L_b = -0.0065
        h_b = 0
        
    elif 11000 <= alt < 20000:
        P_b = 22632.10
        T_b = 216.65
        L_b = 0
        h_b = 11000
        
    elif 20000 <= alt < 32000:
        P_b = 5474.89
        T_b = 216.65
        L_b = 0.001
        h_b = 20000
        
    elif 32000 <= alt < 47000:
        P_b = 868.02
        T_b = 288.65
        L_b = 0.0028
        h_b = 32000
        
    if L_b != 0:
        
        fraction = T_b / (T_b + L_b*(alt - h_b))
        exponent = (g_0 * M)/(R_star * L_b)
        
        P = P_b * (fraction) ** exponent
        
        return [T_b,P]
    
    if L_b == 0:
        exponent = (-g_0 * M * (alt - h_b))/(R_star * T_b)
        
        P = P_b * exp(exponent)
        
        return [T_b,P]

density_at_alt(alt)

    #altitutde is given in m above mean sea level
    #from https://en.wikipedia.org/wiki/Barometric_formula
    
    if 0 <= alt < 11000:
        p_b = 1.2250
        T_b = 288.15
        L_b = -0.0065
        h_b = 0
        
    elif 11000 <= alt < 20000:
        p_b = 0.36391
        T_b = 216.65
        L_b = 0
        h_b = 11000
        
    elif 20000 <= alt < 32000:
        p_b = 0.08803
        T_b = 216.65
        L_b = 0.001
        h_b = 20000
        
    elif 32000 <= alt < 47000:
        p_b = 0.01322
        T_b = 288.65
        L_b = 0.0028
        h_b = 32000
        
    if L_b != 0:
        
        fraction = T_b / (T_b + L_b*(alt - h_b))
        exponent = 1 + (g_0 * M)/(R_star * L_b)
        
        return p_b * (fraction) ** exponent
    
    if L_b == 0:
        exponent = (-g_0 * M * (alt - h_b))/(R_star * T_b)
        
        return p_b * exp(exponent)